spark.query.queryPs1=SELECT distinct 'Y', N_ID_UDD, T_PIVA FROM POD_POD_UDD_STOR_CM WHERE TO_DATE(?,'YYYYMMDD') between NVL(D_INIZIO,TO_DATE('19000101','YYYYMMDD')) AND NVL(D_FINE,TO_DATE('20991231','YYYYMMDD')) and POD_14= substr(?,1,14) 
spark.query.queryPs11=SELECT N_ID_UDD FROM RCU.RCU_UDD WHERE T_CODICE_TERNA=?
spark.query.queryPs2=SELECT STATO_POD,IS_T_TRATTAMENTO FROM IS_T_TRATTAMENTO_STATO_POD  WHERE T_CODICE_POD= substr(?,1,14)
spark.query.queryPs3=SELECT DISTINCT T_AREA_RIF FROM (select t_area_rif,T_CODICE_POD from RCU.RCU_POD union select t_area_rif,T_CODICE_POD from RCUS.RCUS_POD WHERE t_area_rif IS NOT NULL) WHERE substr(T_CODICE_POD,1,14) = substr(?,1,14)
spark.query.queryPs4=SELECT 'Y' FROM RCU.RCU_POD WHERE substr(T_CODICE_POD,1,14) = substr(?,1,14) AND T_AREA_RIF = ? 
spark.query.queryDistrAzienda=SELECT N_ID_DISTR, N_ID_DISTR_RIF FROM DISTR_AZ WHERE T_PIVA=?
spark.query.createview=CREATE OR REPLACE VIEW IS_T_TRATTAMENTO_STATO_POD  AS \
SELECT  substr(p.T_CODICE_POD,1,14) T_CODICE_POD,tmp.STATO_POD,  \
CASE   \
  WHEN EXISTS ( \
  SELECT 'Y'  \
  FROM RCU.RCU_POD_MISURE a  \
  where a.n_id_pod = b.n_id_pod AND a.T_TRATTAMENTO = 'O' and  TO_DATE('annomese'||01,'yyyymmdd') >= a.D_ANNO_MESE and D_ANNO_MESE = ( \
  SELECT max(D_ANNO_MESE)  \
  FROM RCU.rcu_pod_misure x where x.n_id_pod = b.n_id_pod and TO_DATE('annomese'||01,'YYYYMMDD') >= x.D_ANNO_MESE))  \
THEN 'Y'  \
 WHEN EXISTS ( \
  SELECT 'Y'  \
  FROM RCU.RCU_POD_MISURE a  \
  where a.n_id_pod = b.n_id_pod AND a.T_TRATTAMENTO != 'O' and  TO_DATE('annomese'||01,'yyyymmdd') >= a.D_ANNO_MESE and D_ANNO_MESE = ( \
  SELECT max(D_ANNO_MESE)  \
  FROM RCU.rcu_pod_misure x where x.n_id_pod = b.n_id_pod and TO_DATE('annomese'||01,'YYYYMMDD') >= x.D_ANNO_MESE))  \
THEN 'N'  \
WHEN MISUS.IS_T_TRATTAMENTO = 'Y' \
THEN 'Y'  \
ELSE 'N' \
END AS IS_T_TRATTAMENTO  \
FROM RCU.RCU_POD_MISURE b  \
JOIN RCU.RCU_POD p ON p.n_id_pod=b.n_id_pod  \
JOIN (  \
SELECT b.n_id_pod,  \
CASE WHEN EXISTS (  \
	SELECT a.n_id_pod FROM RCU.RCU_POD_STATO a  \
	WHERE a.n_id_pod = b.n_id_pod  \
	AND 'annomese' between TO_CHAR(NVL(a.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
	AND TO_CHAR(NVL(a.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM')  \
	and a.D_AGGIORNAMENTO = (SELECT max(z.d_aggiornamento) from RCU.RCU_POD_STATO z where z.n_id_pod = a.n_id_pod  \
	and 'annomese' between TO_CHAR(NVL(z.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
	AND TO_CHAR(NVL(z.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM'))  \
) THEN 'Y'  \
WHEN EXISTS (  \
  SELECT 'Y'  FROM RCUS.RCUS_PODSTATO r  \
  WHERE r.n_id_pod = b.n_id_pod  \
  and 'annomese'  between TO_CHAR(NVL(r.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
  AND TO_CHAR(NVL(r.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM') and r.b_valido='Y'  \
  and r.D_AGGIORNAMENTO = (SELECT max(z.d_aggiornamento) from RCUS.RCUS_PODSTATO z where z.n_id_pod = r.n_id_pod  \
  and 'annomese'  between TO_CHAR(NVL(r.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
  AND TO_CHAR(NVL(r.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM') and z.b_valido='Y') \
) THEN 'Y'  \
ELSE 'N' END AS STATO_POD  \
FROM RCU.RCU_POD_STATO b ) tmp on tmp.n_id_pod=p.n_id_pod \
LEFT JOIN (select case when TRATTAMENTO = 'O' THEN 'Y' ELSE 'N' END IS_T_TRATTAMENTO, N_ID_POD \
from ( \
select CASE WHEN D_ANNO_MESE < TRUNC(TO_DATE('annomese'||01,'yyyymmdd'),'MM') THEN T_TRATTAMENTO_SUCC ELSE T_TRATTAMENTO END TRATTAMENTO, n_id_pod, RANG, POD14 \
from ( \
SELECT n_id_pod, RANK() OVER (PARTITION BY n_id_pod ORDER BY d_anno_mese desc, d_aggiornamento desc) rang, t_trattamento, t_trattamento_succ, D_ANNO_MESE, POD14 \
from ( \
SELECT Y.n_id_pod, t_trattamento, t_trattamento_succ, D_ANNO_MESE, X.d_aggiornamento, SUBSTR(Y.T_CODICE_POD,1,14) POD14 \
FROM RCUS.rcus_podmisure x, RCU.RCU_POD Y where x.D_ANNO_MESE <=  TO_DATE('annomese'||01,'YYYYMMDD') AND X.N_ID_POD = Y.N_ID_POD \
AND SUBSTR(Y.T_CODICE_POD,1,14)=SUBSTR(Y.T_CODICE_POD,1,14) \
) ) where rang = 1 \
) ) MISUS ON p.N_ID_POD = MISUS.N_ID_POD
spark.query.createview_statopod=CREATE OR REPLACE VIEW STATO_POD  AS \
SELECT substr(a.T_CODICE_POD,1,14) T_CODICE_POD, \
CASE WHEN EXISTS (  \
	SELECT a.n_id_pod FROM RCU.RCU_POD_STATO a  \
	WHERE a.n_id_pod = b.n_id_pod  \
	AND 'annomese' between TO_CHAR(NVL(a.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
	AND TO_CHAR(NVL(a.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM')  \
	and a.D_AGGIORNAMENTO = (SELECT max(z.d_aggiornamento) from RCU.RCU_POD_STATO z where z.n_id_pod = a.n_id_pod  \
	and 'annomese' between TO_CHAR(NVL(z.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
	AND TO_CHAR(NVL(z.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM'))  \
) THEN 'Y'  \
WHEN EXISTS ( \
  SELECT 'Y'  FROM RCUS.RCUS_PODSTATO r  \
  WHERE r.n_id_pod = b.n_id_pod  \
  and 'annomese'  between TO_CHAR(NVL(r.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
  AND TO_CHAR(NVL(r.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM') and r.b_valido='Y'  \
  and r.D_AGGIORNAMENTO = (SELECT max(z.d_aggiornamento) from RCUS.RCUS_PODSTATO z where z.n_id_pod = r.n_id_pod  \
  and 'annomese'  between TO_CHAR(NVL(r.D_ATTIVAZIONE,TO_DATE('19000101','yyyymmdd')),'YYYYMM')  \
  AND TO_CHAR(NVL(r.D_DISATTIVAZIONE,TO_DATE('20991231','yyyymmdd')),'YYYYMM') and z.b_valido='Y') \
) THEN 'Y'  \
ELSE 'N' END AS STATO_POD  \
FROM RCU.RCU_POD_STATO b  \
JOIN RCU.RCU_POD a ON a.n_id_pod = b.n_id_pod
spark.query.queryPs21=SELECT STATO_POD FROM STATO_POD WHERE substr(T_CODICE_POD,1,14)= substr(?,1,14)
spark.query.createview_isttrattamento=CREATE OR REPLACE VIEW IS_T_TRATTAMENTO  AS \
SELECT substr(p.T_CODICE_POD,1,14) T_CODICE_POD, \
CASE   \
  WHEN EXISTS ( \
  SELECT 'Y'  \
  FROM RCU.RCU_POD_MISURE a  \
  where a.n_id_pod = b.n_id_pod AND a.T_TRATTAMENTO = 'O' and  TO_DATE('201803'||01,'yyyymmdd') >= a.D_ANNO_MESE and D_ANNO_MESE = ( \
  SELECT min(D_ANNO_MESE)  \
  FROM RCU.rcu_pod_misure x where x.n_id_pod = b.n_id_pod and TO_DATE('201803'||01,'YYYYMMDD') >= x.D_ANNO_MESE))  \
THEN 'Y'  \
  WHEN EXISTS ( \
  SELECT 'Y'  \
  FROM RCUS.RCUS_PODMISURE c  \
  where c.n_id_pod = b.n_id_pod  and c.T_TRATTAMENTO = 'O' and c.D_ANNO_MESE <=TRUNC(TO_DATE('201803'||01,'yyyymmdd'),'MM') and c.b_valido = 'Y' and D_ANNO_MESE = ( \
  SELECT min(D_ANNO_MESE)  \
  FROM RCUS.rcus_podmisure x \
  where x.n_id_pod = c.n_id_pod and TO_DATE('201803'||01,'YYYYMMDD') >= x.D_ANNO_MESE and x.b_valido = 'Y'))  \
THEN 'Y'  \
ELSE 'N'  \
END AS IS_T_TRATTAMENTO  \
FROM RCU.RCU_POD_MISURE b  \
JOIN RCU.RCU_POD p ON p.n_id_pod=b.n_id_pod
spark.query.queryPs22=SELECT IS_T_TRATTAMENTO FROM IS_T_TRATTAMENTO WHERE substr(T_CODICE_POD,1,14)= substr(?,1,14)
spark.query.fm_quarti.time_stamp_max=select distinct * from ( \
    select pivadistributorequarti, pivautentequarti,podquarti, annoquarti,mesequarti,giornoquarti,areaquarti,validato,nomefile,codcontrdispquarti,coducquarti, \
	tipodato_e,tipodato_s,tensione,trattamento_o,potcontrimpl,potdisp,cifreatt,cifrerea,raccolta,potmax,perdita,annomesegiornodir, \
	 e1, e2, e3, e4, e5, e6, e7, e8, e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50, \
	e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70,e71,e72,e73,e74,e75,e76,e77,e78,e79,e80,e81,e82,e83,e84,e85,e86,e87,e88,e89,e90,e91,e92,e93,e94,e95,e96,e97,e98,e99,e100, \
    time_stamp,max(time_stamp) over ( partition by annoquarti,mesequarti,giornoquarti,pivadistributorequarti,podquarti) time_stamp_max  \
    from au.fm_quarti T WHERE_CONDITIONS and validato = 'S' \
) D where D.time_stamp_max=D.time_stamp